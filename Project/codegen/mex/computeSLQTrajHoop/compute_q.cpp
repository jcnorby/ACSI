/*
 * Academic License - for use in teaching, academic research, and meeting
 * course requirements at degree granting institutions only.  Not for
 * government, commercial, or other organizational use.
 *
 * compute_q.cpp
 *
 * Code generation for function 'compute_q'
 *
 */

/* Include files */
#include "mwmathutil.h"
#include "rt_nonfinite.h"
#include "computeSLQTrajHoop.h"
#include "compute_q.h"

/* Function Definitions */
real_T compute_q(real_T t, const real_T in2[12], const real_T in3[4], const
                 real_T in4[12], const real_T in5[4], const real_T in6[12],
                 real_T t_wp)
{
  real_T t2;

  /* COMPUTE_Q */
  /*     Q = COMPUTE_Q(T,IN2,IN3,IN4,IN5,IN6,T_WP) */
  /*     This function was generated by the Symbolic Math Toolbox version 8.1. */
  /*     01-Dec-2018 14:13:32 */
  t2 = t - t_wp;
  return ((((((((((((((((in4[4] * 10.0 - in2[4] * 10.0) * (in4[4] - in2[4]) +
                        (in3[0] * 1000.0 - in5[0] * 1000.0) * (in3[0] - in5[0]))
                       + (in3[1] * 1000.0 - in5[1] * 1000.0) * (in3[1] - in5[1]))
                      + (in3[2] * 1000.0 - in5[2] * 1000.0) * (in3[2] - in5[2]))
                     + (in3[3] * 1000.0 - in5[3] * 1000.0) * (in3[3] - in5[3]))
                    + (in2[0] * 10.0 - in4[0] * 10.0) * (in2[0] - in4[0])) +
                   (in2[1] * 10.0 - in4[1] * 10.0) * (in2[1] - in4[1])) + (in2[2]
    * 10.0 - in4[2] * 10.0) * (in2[2] - in4[2])) + muDoubleScalarExp(t2 * t2 *
    -100.0) * (((((((((in2[3] * 100.0 - in6[3] * 100.0) * (in2[3] - in6[3]) *
                      5.6418958354775626 + (in2[5] * 100.0 - in6[5] * 100.0) *
                      (in2[5] - in6[5]) * 5.6418958354775626) + (in2[4] * 100.0
    - in6[4] * 100.0) * (in2[4] - in6[4]) * 5.6418958354775626) + (in2[0] *
    10000.0 - in6[0] * 10000.0) * (in2[0] - in6[0]) * 5.6418958354775626) +
                   (in6[1] * 10000.0 - in2[1] * 10000.0) * (in6[1] - in2[1]) *
                   5.6418958354775626) + (in6[2] * 10000.0 - in2[2] * 10000.0) *
                  (in6[2] - in2[2]) * 5.6418958354775626) + (in2[6] - in6[6]) *
                 (in2[6] * 100.0 - in6[6] * 100.0) * 5.6418958354775626) + (in2
    [7] - in6[7]) * (in2[7] * 100.0 - in6[7] * 100.0) * 5.6418958354775626) +
               (in2[8] - in6[8]) * (in2[8] * 100.0 - in6[8] * 100.0) *
               5.6418958354775626)) + (in2[9] - in4[9]) * (in2[9] * 10.0 - in4[9]
    * 10.0)) + (in2[11] - in4[11]) * (in2[11] * 10.0 - in4[11] * 10.0)) + (in2
    [10] - in4[10]) * (in2[10] * 10.0 - in4[10] * 10.0)) + (in2[6] - in4[6]) *
             (in2[6] * 10.0 - in4[6] * 10.0)) + (in2[7] - in4[7]) * (in2[7] *
             10.0 - in4[7] * 10.0)) + (in2[8] - in4[8]) * (in2[8] * 10.0 - in4[8]
            * 10.0)) + (in2[3] - in4[3]) * (in2[3] * 10.0 - in4[3] * 10.0)) +
    (in4[5] - in2[5]) * (in4[5] * 10.0 - in2[5] * 10.0);
}

/* End of code generation (compute_q.cpp) */
