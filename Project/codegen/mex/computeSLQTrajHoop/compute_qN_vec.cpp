/*
 * Academic License - for use in teaching, academic research, and meeting
 * course requirements at degree granting institutions only.  Not for
 * government, commercial, or other organizational use.
 *
 * compute_qN_vec.cpp
 *
 * Code generation for function 'compute_qN_vec'
 *
 */

/* Include files */
#include "rt_nonfinite.h"
#include "computeSLQTrajHoop.h"
#include "compute_qN_vec.h"

/* Function Definitions */
void compute_qN_vec(const real_T in1[12], const real_T in2[12], real_T qN_vec[12])
{
  /* COMPUTE_QN_VEC */
  /*     QN_VEC = COMPUTE_QN_VEC(IN1,IN2) */
  /*     This function was generated by the Symbolic Math Toolbox version 8.2. */
  /*     10-Dec-2018 00:20:14 */
  qN_vec[0] = in1[0] * 200000.0 - in2[0] * 200000.0;
  qN_vec[1] = in2[1] * -200000.0 + in1[1] * 200000.0;
  qN_vec[2] = in2[2] * -200000.0 + in1[2] * 200000.0;
  qN_vec[3] = in1[3] * 200.0 - in2[3] * 200.0;
  qN_vec[4] = in1[4] * 200.0 - in2[4] * 200.0;
  qN_vec[5] = in1[5] * 200.0 - in2[5] * 200.0;
  qN_vec[6] = in1[6] * 200000.0 - in2[6] * 200000.0;
  qN_vec[7] = in1[7] * 200000.0 - in2[7] * 200000.0;
  qN_vec[8] = in1[8] * 200000.0 - in2[8] * 200000.0;
  qN_vec[9] = in1[9] * 2.0 - in2[9] * 2.0;
  qN_vec[10] = in1[10] * 2.0 - in2[10] * 2.0;
  qN_vec[11] = in1[11] * 2.0 - in2[11] * 2.0;
}

/* End of code generation (compute_qN_vec.cpp) */
