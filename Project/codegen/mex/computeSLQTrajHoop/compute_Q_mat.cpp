/*
 * Academic License - for use in teaching, academic research, and meeting
 * course requirements at degree granting institutions only.  Not for
 * government, commercial, or other organizational use.
 *
 * compute_Q_mat.cpp
 *
 * Code generation for function 'compute_Q_mat'
 *
 */

/* Include files */
#include <string.h>
#include "mwmathutil.h"
#include "rt_nonfinite.h"
#include "computeSLQTrajHoop.h"
#include "compute_Q_mat.h"

/* Function Definitions */
void compute_Q_mat(real_T t, real_T t_wp, real_T Q[144])
{
  real_T t4;
  real_T t6;

  /* COMPUTE_Q_MAT */
  /*     Q = COMPUTE_Q_MAT(T,IN2,IN3,IN4,IN5,IN6,T_WP) */
  /*     This function was generated by the Symbolic Math Toolbox version 8.2. */
  /*     10-Dec-2018 00:20:13 */
  t4 = t - t_wp;
  t4 = muDoubleScalarExp(-(t4 * t4 * 100.0));
  t6 = t4 * 112837.9167095513 + 20.0;
  t4 = t4 * 1128.3791670955129 + 20.0;
  Q[0] = t6;
  memset(&Q[1], 0, 12U * sizeof(real_T));
  Q[13] = t6;
  memset(&Q[14], 0, 12U * sizeof(real_T));
  Q[26] = t6;
  memset(&Q[27], 0, 12U * sizeof(real_T));
  Q[39] = t4;
  memset(&Q[40], 0, 12U * sizeof(real_T));
  Q[52] = t4;
  memset(&Q[53], 0, 12U * sizeof(real_T));
  Q[65] = t4;
  memset(&Q[66], 0, 12U * sizeof(real_T));
  Q[78] = t4;
  memset(&Q[79], 0, 12U * sizeof(real_T));
  Q[91] = t4;
  memset(&Q[92], 0, 12U * sizeof(real_T));
  Q[104] = t4;
  memset(&Q[105], 0, 12U * sizeof(real_T));
  Q[117] = 20.0;
  memset(&Q[118], 0, 12U * sizeof(real_T));
  Q[130] = 20.0;
  memset(&Q[131], 0, 12U * sizeof(real_T));
  Q[143] = 20.0;
}

/* End of code generation (compute_Q_mat.cpp) */
